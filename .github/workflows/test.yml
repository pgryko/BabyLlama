name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.12"]
        include:
          - os: ubuntu-latest
            python-version: "3.11"
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[test]"
    
    - name: Run linting
      run: |
        pip install -e ".[dev]"
        ruff check .
        black --check .
    
    - name: Run tests with coverage
      run: |
        pytest -v --cov=. --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  integration-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[test]"
    
    - name: Run integration tests
      run: |
        pytest -v tests/test_integration.py -m integration --timeout=300
    
    - name: Test model creation
      run: |
        python -c "from train import create_model; print('Model creation imports successful')"

  minimal-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    
    - name: Install minimal dependencies
      run: |
        python -m pip install --upgrade pip
        pip install torch --index-url https://download.pytorch.org/whl/cpu
        pip install transformers tokenizers datasets pyyaml numpy
    
    - name: Quick smoke test
      run: |
        python test_model.py --model_type gpt2 --hidden_size 64 --n_layer 2 --n_head 2
    
    - name: Test imports
      run: |
        python -c "import data_utils; print('data_utils imported successfully')"
        python -c "import train; print('train imported successfully')"
        python -c "import evaluate; print('evaluate imported successfully')"